additionalArguments:
 - --api.insecure=true
 - --certificatesresolvers.acme-dns.acme.dnschallenge.provider=acme-dns
 - --certificatesresolvers.acme-dns.acme.email=admin@securedsoft.online
 - --certificatesresolvers.acme-dns.acme.storage=/ssl-certs/acme-dns.json
 
logs:

  general:
    level: ERROR

ports:
  database:
      expose: true
      nodePort: 30001
      port: 30001
      protocol: TCP

  web:
    
    redirectTo: 
       port: websecure
  websecure:
    tls:
      enabled: true
      
      certResolver: acme-dns
  
  

env:

  - name: ACME_DNS_API_BASE
    valueFrom:
      secretKeyRef:
        key: apiUrl
        name: acme-dns-credentials
  - name: ACME_DNS_STORAGE_PATH
    valueFrom:
      secretKeyRef:
        key: storagePath
        name: acme-dns-credentials


ingressRoute:
  dashboard:
    enabled: true


persistence:
  enabled: true
  name: ssl-certs
  size: 1Gi
  path: /ssl-certs

deployment:
  initContainers:
    # The "volume-permissions" init container is required if you run into permission issues.
    # Related issue: https://github.com/containous/traefik/issues/6972
    
    - name: volume-permissions
      image: busybox:1.31.1
      command:
        [
          "sh",
          "-c",
          "touch /ssl-certs/acme-dns.json; chown 65532 /ssl-certs/acme-dns.json; chmod -v 600 /ssl-certs/acme-dns.json && touch /ssl-certs/records.json; chown 65532 /ssl-certs/records.json; chmod -v 600 /ssl-certs/records.json",
        ]
      securityContext:
        runAsNonRoot: false
        runAsGroup: 0
        runAsUser: 0
      volumeMounts:
        - name: ssl-certs
          mountPath: /ssl-certs

# Set Traefik as your default Ingress Controller, according to Kubernetes 1.19+ changes.
ingressClass:
  enabled: true
  isDefaultClass: true
